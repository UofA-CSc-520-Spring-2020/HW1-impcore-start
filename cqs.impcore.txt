
1.  What is the value of the following Impcore expression?

        (if (> 3 5) 17 99)

2.  Which of the following best describes the syntactic structure of
    Impcore?

    (a)   An expression can contain a definition
    (b)   A definition can contain an expression
    (c)   Both of the above
    (d)   None of the above

3.  Does this Impcore test pass? Please answer "yes" or "no."

        (check-expect (+ 1 2 3) 6)

    Assuming `x` is bound to a global variable, does this Impcore test
    pass? Again, please answer "yes" or "no."

        (check-expect (set x 1) 1)

Next read Section 1.2, which starts on page 16, about abstract syntax.

4.  After reading about abstract syntax, look at this picture of an
    abstract-syntax tree for a "calculator expression":

    <img alt="Picture of an abstract-syntax tree" src="hw1-ast.JPG" width="300">

    Answer these questions:

    (a) What concrete syntax could you write in C for this expression?
        (don't forget operator precedence)

    (b) What concrete syntax could you write in Impcore for this expression?

5. Read the expectations about contracts in the course coding guidelines.

Suppose I write a contract for a power function that says, "this function 
multiplies x by itself n times." According to our expectations, is this a 
good contract or a bad contract? Please answer "good" or "bad." If it is bad, 
write a good version.
